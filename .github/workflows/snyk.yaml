name: Security Pipeline

on:
  push:
  pull_request:

permissions:
  contents: read

env:
  SEVERITY_THRESHOLD: medium # low|medium|high|critical
  GRACE_PERIOD_DAYS: "1" # dias de carência

jobs:
  snyk-sca:
    name: Snyk Open Source (SCA)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Snyk CLI
        uses: snyk/actions/setup@master

      - name: Install snyk-to-html
        run: npm install -g snyk-to-html

      - name: Snyk test (SCA) -> JSON
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          mkdir -p reports
          snyk test --all-projects --severity-threshold=${{ env.SEVERITY_THRESHOLD }} \
            --json-file-output=reports/snyk-sca.json || true
          snyk-to-html -i reports/snyk-sca.json -o reports/snyk-sca.html || true

      # ---- GRACE CHECK SCA (mínimo) ----
      - name: Grace period check (SCA)
        run: |
          set -euo pipefail
          [ -f reports/snyk-sca.json ] || { echo "No SCA JSON found."; exit 0; }

          cutoff=$(date -d "-${{ env.GRACE_PERIOD_DAYS }} days" +%s)
          cutoff_iso=$(date -u -d "@$cutoff" +"%Y-%m-%dT%H:%M:%SZ")
          case "${{ env.SEVERITY_THRESHOLD }}" in
            low) thr=0;; medium) thr=1;; high) thr=2;; critical) thr=3;; *) thr=2;;
          esac
          echo "SCA cutoff: $cutoff_iso (epoch=$cutoff) | threshold=${{ env.SEVERITY_THRESHOLD }}"

          violations=$(
            jq -r --argjson cutoff "$cutoff" --argjson thr "$thr" '
              def sev: {"low":0,"medium":1,"high":2,"critical":3}[.severity];
              def d: (.introducedDate // .firstSeen // .creationTime // .disclosureTime // .publicationTime // .updated // "");
              [ .vulnerabilities[]?
                | select(sev >= $thr)
                | . as $v
                | (d | gsub("\\.[0-9]+Z$"; "Z") | fromdateiso8601?) as $epo
                | select($epo != null and $epo <= $cutoff)
                | "- \($v.severity|ascii_upcase) \($v.packageName): \($v.title) | date=\(d) | epoch=\($epo)"
              ]' reports/snyk-sca.json
          )

          if [ "$violations" != "[]" ] && [ -n "$violations" ]; then
            echo "::error::SCA violations beyond ${{ env.GRACE_PERIOD_DAYS }} day(s):"
            echo "$violations"
            exit 1
          fi
          echo "SCA OK (new/in-grace or below threshold)."

      - name: Snyk monitor (SCA) -> UI (by branch)
        if: always()
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk monitor --all-projects --target-reference="${{ github.ref_name }}" || true

      - name: Upload SCA reports
        uses: actions/upload-artifact@v4
        with:
          name: snyk-sca-reports
          path: reports/*sca.*

  snyk-code:
    name: Snyk Code (SAST)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Snyk CLI
        uses: snyk/actions/setup@master

      - name: Install snyk-to-html
        run: npm install -g snyk-to-html

      - name: Snyk Code test -> JSON/HTML (local reports)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          mkdir -p reports
          snyk code test --severity-threshold=${{ env.SEVERITY_THRESHOLD }} \
            --json-file-output=reports/snyk-code.json || true
          if [ -f reports/snyk-code.json ]; then
            snyk-to-html -i reports/snyk-code.json -o reports/snyk-code.html
          else
            echo "<html><body><h3>No Snyk Code issues found</h3></body></html>" > reports/snyk-code.html
          fi

      # ---- GRACE CHECK SAST (mínimo) ----
      - name: Grace period check (SAST)
        run: |
          set -euo pipefail
          [ -f reports/snyk-code.json ] || { echo "No SAST JSON found."; exit 0; }

          cutoff=$(date -d "-${{ env.GRACE_PERIOD_DAYS }} days" +%s)
          cutoff_iso=$(date -u -d "@$cutoff" +"%Y-%m-%dT%H:%M:%SZ")
          case "${{ env.SEVERITY_THRESHOLD }}" in
            low) thr=0;; medium) thr=1;; high) thr=2;; critical) thr=3;; *) thr=2;;
          esac
          echo "SAST cutoff: $cutoff_iso (epoch=$cutoff) | threshold=${{ env.SEVERITY_THRESHOLD }}"

          violations=$(
            jq -r --argjson cutoff "$cutoff" --argjson thr "$thr" '
              def sev: {"low":0,"medium":1,"high":2,"critical":3}[.severity];
              def d: (.introducedDate // .firstSeen // .creationTime // .disclosureTime // .publicationTime // .updated // "");
              [ .issues[]?
                | select(sev >= $thr)
                | . as $i
                | (d | gsub("\\.[0-9]+Z$"; "Z") | fromdateiso8601?) as $epo
                | select($epo != null and $epo <= $cutoff)
                | "- \($i.severity|ascii_upcase) \($i.ruleId): \($i.title) | date=\(d) | epoch=\($epo)"
              ]' reports/snyk-code.json
          )

          if [ "$violations" != "[]" ] && [ -n "$violations" ]; then
            echo "::error::SAST violations beyond ${{ env.GRACE_PERIOD_DAYS }} day(s):"
            echo "$violations"
            exit 1
          fi
          echo "SAST OK (new/in-grace or below threshold)."

      - name: Upload Code reports
        uses: actions/upload-artifact@v4
        with:
          name: snyk-code-reports
          path: reports/*code.*
